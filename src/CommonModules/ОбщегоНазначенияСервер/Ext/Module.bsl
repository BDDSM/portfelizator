
Функция ПолучитьМассивТикеров() Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Котировки.Тикер КАК Тикер
	|ИЗ
	|	РегистрСведений.Котировки КАК Котировки
	|
	|УПОРЯДОЧИТЬ ПО
	|	Тикер";
	МассивТикеров = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Тикер");
	
	Возврат МассивТикеров;
	
КонецФункции

Функция ПолучитьДатуСУказаннымЧисломМесяца(БазоваяДата, ЧислоМесяца)
	
	Сутки = 86400; // 24 * 60 * 60;
	
	Результат = Неопределено;
	
	Если ЧислоМесяца = 99 Тогда
		// "последний день месяца"
		Результат = КонецМесяца(БазоваяДата);
	Иначе 
		// засада ещё в том, что в выбранном месяце может не быть такого числа (например, 31 числа в феврале)
		ВремДата = НачалоМесяца(БазоваяДата);
		Результат = ВремДата + (ЧислоМесяца - 1) * Сутки;
		Если НачалоМесяца(Результат) > ВремДата Тогда
			// "перелёт": оказались уже в следующем месяце => вернём последний день указанного месяца
			Результат = КонецМесяца(ВремДата);
		КонецЕсли; 
	КонецЕсли; 
	
	Возврат Результат;
	
КонецФункции

Функция ПолучитьДатуСУказаннымДнемНедели(БазоваяДата, НомерНедели, ДеньНедели)

	Сутки = 86400; // 24 * 60 * 60;
	
	Результат = Неопределено;
	
	Если НомерНедели = 9 Тогда
		// последняя неделя месяца
		ВремДата = КонецМесяца(БазоваяДата);
		ВремДеньНедели = ДеньНедели(ВремДата);
		Дельта = ?(ВремДеньНедели >= ДеньНедели, 
					ВремДеньНедели - ДеньНедели,
					(7 - ДеньНедели) + ВремДеньНедели);
		Результат = ВремДата - Сутки * Дельта;
	Иначе 
		// n-ая неделя месяца
		ВремДата = НачалоМесяца(БазоваяДата);
		ВремДеньНедели = ДеньНедели(ВремДата);
		Дельта = ?(ДеньНедели >= ВремДеньНедели, 
					ДеньНедели - ВремДеньНедели,
					(7 - ВремДеньНедели) + ДеньНедели);
		Результат = ВремДата + Сутки * Дельта + 7 * Сутки * (НомерНедели - 1);
	КонецЕсли; 

	Возврат Результат;
	
КонецФункции
		
Функция ПолучитьДатуСледующейРебалансировки(ДатаПредыдущейРебалансировки, ПараметрыРебалансировки) Экспорт
	
	ПредДата = ДатаПредыдущейРебалансировки;

	Результат = Неопределено;
	
	Сутки = 86400; // 24 * 60 * 60;
	
	Если ПараметрыРебалансировки.Периодичность = Перечисления.ПериодичностьРебалансировки.Ежедневно Тогда
		
		Результат = ПредДата + Сутки * ПараметрыРебалансировки.ЧислоПериодов;
		
	ИначеЕсли ПараметрыРебалансировки.Периодичность = Перечисления.ПериодичностьРебалансировки.Ежемесячно Тогда
		
		ВремДата = ДобавитьМесяц(ПредДата, ПараметрыРебалансировки.ЧислоПериодов);
		
		Если ПараметрыРебалансировки.ВариантВыбораДняМесяца = Перечисления.ВариантыВыбораДняМесяца.ЧислоМесяца Тогда
			
			Результат = ПолучитьДатуСУказаннымЧисломМесяца(ВремДата, ПараметрыРебалансировки.ДеньМесяца);
			
		ИначеЕсли ПараметрыРебалансировки.ВариантВыбораДняМесяца = Перечисления.ВариантыВыбораДняМесяца.ДеньНедели Тогда
			
			Результат = ПолучитьДатуСУказаннымДнемНедели(ВремДата, ПараметрыРебалансировки.НомерНедели, ПараметрыРебалансировки.ДеньНедели);
			
		КонецЕсли; 
		
	ИначеЕсли ПараметрыРебалансировки.Периодичность = Перечисления.ПериодичностьРебалансировки.Ежегодно Тогда
		
		ВремДата = Дата(Год(ПредДата) + ПараметрыРебалансировки.ЧислоПериодов, ПараметрыРебалансировки.МесяцГода, 1);
		
		Если ПараметрыРебалансировки.ВариантВыбораДняМесяца = Перечисления.ВариантыВыбораДняМесяца.ЧислоМесяца Тогда
			
			Результат = ПолучитьДатуСУказаннымЧисломМесяца(ВремДата, ПараметрыРебалансировки.ДеньМесяца);
			
		ИначеЕсли ПараметрыРебалансировки.ВариантВыбораДняМесяца = Перечисления.ВариантыВыбораДняМесяца.ДеньНедели Тогда
			
			Результат = ПолучитьДатуСУказаннымДнемНедели(ВремДата, ПараметрыРебалансировки.НомерНедели, ПараметрыРебалансировки.ДеньНедели);
			
		КонецЕсли; 
		
	КонецЕсли; 
	
	Если Результат <> Неопределено Тогда
		Результат = НачалоДня(Результат);
	КонецЕсли; 
	
	Возврат Результат;
	
КонецФункции
