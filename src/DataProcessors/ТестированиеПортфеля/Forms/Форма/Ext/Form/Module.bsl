
&НаКлиенте
Процедура Протестировать(Команда)
	
	Отказ = Ложь;
	
	Если НЕ ЗначениеЗаполнено(СуммаИнвестиций) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не задана Сумма инвестиций!",, "СуммаИнвестиций",, Отказ);
	КонецЕсли; 
	
	Если Портфели.Количество() = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не указаны портфели!",, "Портфели",, Отказ);
	КонецЕсли;
	
	ПредыдущиеПортфели = Новый Соответствие; 	
	Для Каждого СтрокаТаблицы Из Портфели Цикл
		ТекПортфель = СтрокаТаблицы.Портфель;
		Если НЕ ЗначениеЗаполнено(ТекПортфель) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не выбран портфель!",, "Портфели[" + Формат(Портфели.Индекс(СтрокаТаблицы), "ЧГ=") + "].Портфель",, Отказ);
		КонецЕсли;
		Если ПредыдущиеПортфели.Получить(ТекПортфель) <> Неопределено Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Портфель уже присутствует среди выбранных!",, "Портфели[" + Формат(Портфели.Индекс(СтрокаТаблицы), "ЧГ=") + "].Портфель",, Отказ);
		КонецЕсли; 
		ПредыдущиеПортфели.Вставить(ТекПортфель, Истина);
	КонецЦикла;	

	Если Отказ Тогда
		Возврат;
	КонецЕсли; 
	
	ПротестироватьНаСервере();
	
	Если Протокол.Количество() > 0 Тогда
		Элементы.СтраницаПротокол.Видимость = Истина;
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаПротокол;
	Иначе 
		Элементы.СтраницаПротокол.Видимость = Ложь;
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура ОчистититьТаблицы()
	
	Протокол.Очистить();
	Статистика.Очистить();
	Данные.Очистить();
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьВПротокол(ТекстСообщения, Статус = "Инфо")
	
	НоваяСтрока = Протокол.Добавить(); 
	НоваяСтрока.Статус = Статус;
	НоваяСтрока.ТекстСообщения = ТекстСообщения;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьОшибкуВПротокол(ТекстСообщения)
	
	ДобавитьВПротокол(ТекстСообщения, "Ошибка");
	
КонецПроцедуры

&НаСервере
Функция ПолучитьАктуальныйПортфельНаДату(ОписаниеПортфеля, ДатаСведений)
	
	Результат = Неопределено;
	Для Каждого СтрокаСоставаМетапортфеля Из ОписаниеПортфеля.СоставМетапортфеля Цикл
		// ищем среди портфелей метапортфеля ближайший к дате ДатаСведений
		Если СтрокаСоставаМетапортфеля.Дата <= ДатаСведений Тогда
			Результат = СтрокаСоставаМетапортфеля.Портфель;
		Иначе 
			Прервать;
		КонецЕсли; 
	КонецЦикла; 
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ПроверитьНаличиеНеобходимыхКотировок(ОписаниеПортфеля, Котировки)
	
	Результат = Истина;
	ТекстОшибки = "";
	
	СоставПортфеля = ОписаниеПортфеля.СоставПортфеля;
	
	Для Каждого СтрокаСостава Из СоставПортфеля Цикл
		ТекТикер = СтрокаСостава.Тикер;
		ТекКотировка = Котировки.Получить(ТекТикер);
		Если ТекКотировка = Неопределено Тогда
			ТекстОшибки = ТекстОшибки + ?(ПустаяСтрока(ТекстОшибки), "", "; ") + "Не найдена котировка для тикера """ + ТекТикер + """";
			Результат = Ложь;
		КонецЕсли; 
	КонецЦикла;
	
	Если НЕ Результат Тогда
		ОписаниеПортфеля.ТекстПоследнейОшибки = ТекстОшибки;
	КонецЕсли; 
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция СформироватьПортфель(ОписаниеПортфеля, Котировки, Знач РазмерПортфеля)
	
	Если НЕ ПроверитьНаличиеНеобходимыхКотировок(ОписаниеПортфеля, Котировки) Тогда
		Возврат Ложь;
	КонецЕсли; 
	
	СоставПортфеля = ОписаниеПортфеля.СоставПортфеля;	
	
	СуммаДолей = СоставПортфеля.Итог("Доля");

	Для Каждого СтрокаСостава Из СоставПортфеля Цикл
		ТекТикер = СтрокаСостава.Тикер;
		ТекДоля = СтрокаСостава.Доля;
		ТекКотировка = Котировки.Получить(ТекТикер);
		СтрокаСостава.Количество = (РазмерПортфеля * ТекДоля / СуммаДолей) / ТекКотировка;
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Функция ПолучитьРазмерПортфеля(ОписаниеПортфеля, Котировки)
	
	Если НЕ ПроверитьНаличиеНеобходимыхКотировок(ОписаниеПортфеля, Котировки) Тогда
		Возврат Неопределено;
	КонецЕсли; 
	
	СоставПортфеля = ОписаниеПортфеля.СоставПортфеля;
	
	Результат = 0;
	Для Каждого СтрокаСостава Из СоставПортфеля Цикл
		ТекТикер = СтрокаСостава.Тикер;
		ТекКоличество = СтрокаСостава.Количество;
		ТекКотировка = Котировки.Получить(ТекТикер);
		Результат = Результат + ТекКотировка * ТекКоличество;
	КонецЦикла; 
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ПолучитьДатуСледующейРебалансировки(ОписаниеПортфеля)
	
	Возврат ОбщегоНазначенияСервер.ПолучитьДатуСледующейРебалансировки(
		ОписаниеПортфеля.ДатаПредыдущейРебалансировки,
		ОписаниеПортфеля.ПараметрыРебалансировки
		);
	
КонецФункции

&НаСервере
Процедура ЗаполнитьПараметрыРебалансировки(ОписаниеПортфеля)
	
	СпособРебалансировки = ОписаниеПортфеля.СпособРебалансировки;
	
	ПараметрыРебалансировки = Неопределено;
	
	Если ЗначениеЗаполнено(СпособРебалансировки) Тогда
		
		ПараметрыРебалансировки = Новый Структура;
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СпособыРебалансировки.Периодичность КАК Периодичность,
		|	СпособыРебалансировки.ЧислоПериодов КАК ЧислоПериодов,
		|	СпособыРебалансировки.ВариантВыбораДняМесяца КАК ВариантВыбораДняМесяца,
		|	СпособыРебалансировки.ДеньМесяца КАК ДеньМесяца,
		|	СпособыРебалансировки.ДеньНедели КАК ДеньНедели,
		|	СпособыРебалансировки.НомерНедели КАК НомерНедели,
		|	СпособыРебалансировки.МесяцГода КАК МесяцГода
		|ИЗ
		|	Справочник.СпособыРебалансировки КАК СпособыРебалансировки
		|ГДЕ
		|	СпособыРебалансировки.Ссылка = &Ссылка";
		Запрос.УстановитьПараметр("Ссылка", СпособРебалансировки);
		РезультатЗапроса = Запрос.Выполнить();
		Если НЕ РезультатЗапроса.Пустой() Тогда
			Выборка = РезультатЗапроса.Выбрать();
			Выборка.Следующий();
			Для Каждого ТекКолонка Из РезультатЗапроса.Колонки Цикл
				ИмяКолонки = ТекКолонка.Имя;
				ПараметрыРебалансировки.Вставить(ИмяКолонки, Выборка[ИмяКолонки]);
			КонецЦикла;
		Иначе
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("ВНУТРЕННЯЯ ОШИБКА! Не удалось получить сведения о способе ребалансировки """ + СпособРебалансировки + """!");
		КонецЕсли; 

	КонецЕсли;
	
	ОписаниеПортфеля.Вставить("ПараметрыРебалансировки", ПараметрыРебалансировки);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьОписаниеПортфеля(ПортфельСсылка)
	
	ОписаниеПортфеля = Новый Структура;
	
	ОписаниеПортфеля.Вставить("РазмерПортфеля", 0);
	ОписаниеПортфеля.Вставить("АктивныйПортфель", Неопределено);
	ОписаниеПортфеля.Вставить("ДатаПредыдущейРебалансировки", Неопределено);
	ОписаниеПортфеля.Вставить("ТекстПоследнейОшибки", "");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Портфели.Ссылка КАК Портфель,
	|	Портфели.Наименование КАК Наименование,
	|	Портфели.Метапортфель КАК Метапортфель,
	|	Портфели.СпособРебалансировки КАК СпособРебалансировки
	|ИЗ
	|	Справочник.Портфели КАК Портфели
	|ГДЕ
	|	Портфели.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", ПортфельСсылка);
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("ВНУТРЕННЯЯ ОШИБКА! Не удалось получить сведения о портфеле """ + ПортфельСсылка + """!");
		Возврат Неопределено;
	КонецЕсли; 
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	Для Каждого ТекКолонка Из РезультатЗапроса.Колонки Цикл
		ИмяКолонки = ТекКолонка.Имя;
		ОписаниеПортфеля.Вставить(ИмяКолонки, Выборка[ИмяКолонки]);
	КонецЦикла;
	
	ЗаполнитьПараметрыРебалансировки(ОписаниеПортфеля);
	
	СоставПортфеля = Новый ТаблицаЗначений; 
	СоставПортфеля.Колонки.Добавить("Тикер");
	СоставПортфеля.Колонки.Добавить("Доля");
	СоставПортфеля.Колонки.Добавить("Количество");
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПортфелиСоставПортфеля.Тикер КАК Тикер,
	|	ПортфелиСоставПортфеля.Доля КАК Доля
	|ИЗ
	|	Справочник.Портфели.СоставПортфеля КАК ПортфелиСоставПортфеля
	|ГДЕ
	|	ПортфелиСоставПортфеля.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", ПортфельСсылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(СоставПортфеля.Добавить(), Выборка);
	КонецЦикла; 
	ОписаниеПортфеля.Вставить("СоставПортфеля", СоставПортфеля);
	
	СоставМетапортфеля = Неопределено;
	Если ОписаниеПортфеля.Метапортфель Тогда
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПортфелиСоставМетапортфеля.Дата КАК Дата,
		|	ПортфелиСоставМетапортфеля.Портфель КАК Портфель
		|ИЗ
		|	Справочник.Портфели.СоставМетапортфеля КАК ПортфелиСоставМетапортфеля
		|ГДЕ
		|	ПортфелиСоставМетапортфеля.Ссылка = &Ссылка";
		Запрос.УстановитьПараметр("Ссылка", ПортфельСсылка);
		РезультатЗапроса = Запрос.Выполнить();
		СоставМетапортфеля = РезультатЗапроса.Выгрузить();
		СоставМетапортфеля.Сортировать("Дата");
	КонецЕсли; 
	ОписаниеПортфеля.Вставить("СоставМетапортфеля", СоставМетапортфеля);
	
	Возврат ОписаниеПортфеля;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьСоставПортфеля(ОписаниеПортфеля, ПортфельСсылка) 
	
	ОписаниеПортфеля.СоставПортфеля.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПортфелиСоставПортфеля.Тикер КАК Тикер,
	|	ПортфелиСоставПортфеля.Доля КАК Доля
	|ИЗ
	|	Справочник.Портфели.СоставПортфеля КАК ПортфелиСоставПортфеля
	|ГДЕ
	|	ПортфелиСоставПортфеля.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПортфелиСоставПортфеля.НомерСтроки";
	Запрос.УстановитьПараметр("Ссылка", ПортфельСсылка);
	НовыйСоставПортфеля = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаСостава Из НовыйСоставПортфеля Цикл
		ЗаполнитьЗначенияСвойств(ОписаниеПортфеля.СоставПортфеля.Добавить(), СтрокаСостава);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСоставПортфеляСтрокой(ОписаниеПортфеля)
	
	Результат = "";
	
	Для Каждого СтрокаСостава Из ОписаниеПортфеля.СоставПортфеля Цикл
		Результат = Результат + ", " + СтрокаСостава.Тикер + " => " + СтрокаСостава.Количество + " шт.";
	КонецЦикла;
	
	Результат = Сред(Результат, 3);
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьДанные()
	
	Данные.Очистить();
	
	СписокПортфелей = Новый Массив;
	ОписанияПортфелей = Новый Массив; 
	
	Для Каждого СтрокаТаблицы Из Портфели Цикл
		ТекПортфель = СтрокаТаблицы.Портфель;
		Если НЕ ЗначениеЗаполнено(ТекПортфель) Тогда
			Продолжить;
		КонецЕсли; 
		СписокПортфелей.Добавить(ТекПортфель);
		ТекОписаниеПортфеля = ПолучитьОписаниеПортфеля(ТекПортфель);
		ТекОписаниеПортфеля.СпособРебалансировки = СтрокаТаблицы.СпособРебалансировки;
		ЗаполнитьПараметрыРебалансировки(ТекОписаниеПортфеля);
		ОписанияПортфелей.Добавить(ТекОписаниеПортфеля);
	КонецЦикла; 

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СоставПортфеля.Тикер КАК Тикер
	|ПОМЕСТИТЬ ВТ_Тикеры
	|ИЗ
	|	Справочник.Портфели.СоставПортфеля КАК СоставПортфеля
	|ГДЕ
	|	НЕ СоставПортфеля.Ссылка.Метапортфель
	|	И СоставПортфеля.Ссылка В(&СписокПортфелей)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СоставПортфеля.Тикер
	|ИЗ
	|	Справочник.Портфели.СоставПортфеля КАК СоставПортфеля
	|ГДЕ
	|	СоставПортфеля.Ссылка В
	|			(ВЫБРАТЬ
	|				СоставМетапортфеля.Портфель
	|			ИЗ
	|				Справочник.Портфели.СоставМетапортфеля КАК СоставМетапортфеля
	|			ГДЕ
	|				СоставМетапортфеля.Ссылка.Метапортфель
	|				И СоставМетапортфеля.Ссылка В (&СписокПортфелей)
	|				И СоставМетапортфеля.Дата МЕЖДУ &Дата1 И &Дата2)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Котировки.Период КАК Период,
	|	Котировки.Тикер КАК Тикер,
	|	Котировки.Котировка КАК Котировка
	|ПОМЕСТИТЬ ВТ_Котировки
	|ИЗ
	|	РегистрСведений.Котировки КАК Котировки
	|ГДЕ
	|	Котировки.Период МЕЖДУ &Дата1 И &Дата2
	|	И Котировки.Тикер В
	|			(ВЫБРАТЬ
	|				ВТ_Тикеры.Тикер
	|			ИЗ
	|				ВТ_Тикеры КАК ВТ_Тикеры)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_Котировки.Период КАК Период
	|ИЗ
	|	ВТ_Котировки КАК ВТ_Котировки
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Котировки.Период КАК Период,
	|	ВТ_Котировки.Тикер КАК Тикер,
	|	ВТ_Котировки.Котировка КАК Котировка
	|ИЗ
	|	ВТ_Котировки КАК ВТ_Котировки";
	Запрос.УстановитьПараметр("Дата1", Период.ДатаНачала);
	Запрос.УстановитьПараметр("Дата2", Период.ДатаОкончания);
	Запрос.УстановитьПараметр("СписокПортфелей", СписокПортфелей);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	КолвоРезультатов = МассивРезультатов.Количество();
	МассивПериодов = МассивРезультатов[КолвоРезультатов - 2].Выгрузить().ВыгрузитьКолонку("Период");
	ТаблицаКотировок = МассивРезультатов[КолвоРезультатов - 1].Выгрузить();
	ТаблицаКотировок.Индексы.Добавить("Период, Тикер");
	
	ТекущиеКотировки = Новый Соответствие; 
	ПредыдущиеКотировки = Новый Соответствие;

	Для Каждого ТекПериод Из МассивПериодов Цикл
		
		СтрТекПериод = Формат(ТекПериод, "ДЛФ=D");
		
		ТекущиеКотировки = Новый Соответствие; 
		Для Каждого НайденнаяСтрока Из ТаблицаКотировок.НайтиСтроки(Новый Структура("Период", ТекПериод)) Цикл
			ТекущиеКотировки.Вставить(НайденнаяСтрока.Тикер, НайденнаяСтрока.Котировка);
		КонецЦикла;
		
		Если ФлагИспользоватьПредыдущуюКотировкуЕслиНетТекущей Тогда
			Для Каждого КлючИЗначение Из ПредыдущиеКотировки Цикл
				ТекТикер = КлючИЗначение.Ключ;
				ТекКотировка = КлючИЗначение.Значение;
				Если ТекущиеКотировки.Получить(ТекТикер) = Неопределено Тогда
					ТекущиеКотировки.Вставить(ТекТикер, ТекКотировка);
				КонецЕсли; 
			КонецЦикла; 
		КонецЕсли; 
		
		Для Каждого ТекОписаниеПортфеля Из ОписанияПортфелей Цикл
			
			НаименованиеПортфеля	= ТекОписаниеПортфеля.Наименование;
			ЭтоМетапортфель			= ТекОписаниеПортфеля.Метапортфель;
			ПредставлениеПортфеля	= ?(ЭтоМетапортфель, "мета-портфель", "портфель") + " """ + НаименованиеПортфеля + """";
			
			АктивныйПортфель = Неопределено;
			Если НЕ ЭтоМетапортфель Тогда
				// обычный портфель
				АктивныйПортфель = ТекОписаниеПортфеля.Портфель;
			Иначе
				// метапортфель				
				АктивныйПортфель = ПолучитьАктуальныйПортфельНаДату(ТекОписаниеПортфеля, ТекПериод);
				Если НЕ ЗначениеЗаполнено(АктивныйПортфель) Тогда
					ДобавитьОшибкуВПротокол("Для мета-портфеля """ + НаименованиеПортфеля + """ не удалось определить портфель, актуальный на дату " + СтрТекПериод + "! Проверьте Состав метапортфеля!");
					Продолжить;
				КонецЕсли;
			КонецЕсли; 
			
			ПортфельСформирован = (ТекОписаниеПортфеля.АктивныйПортфель <> Неопределено);
			Если НЕ ПортфельСформирован Тогда

				Если ЭтоМетапортфель Тогда
					ЗаполнитьСоставПортфеля(ТекОписаниеПортфеля, АктивныйПортфель);
				КонецЕсли;
				
				Успех = СформироватьПортфель(ТекОписаниеПортфеля, ТекущиеКотировки, СуммаИнвестиций);
				Если НЕ Успех Тогда
					ДобавитьОшибкуВПротокол("Не удалось сформировать " + ПредставлениеПортфеля + " на дату " + СтрТекПериод + ": " + ТекОписаниеПортфеля.ТекстПоследнейОшибки);
					Продолжить;
				КонецЕсли;
				
				ТекОписаниеПортфеля.АктивныйПортфель = АктивныйПортфель;
				ТекОписаниеПортфеля.ДатаПредыдущейРебалансировки = ТекПериод;
				
				ДобавитьВПротокол("[" + СтрТекПериод + "] " + "Сформирован " + ПредставлениеПортфеля + ": " + ПолучитьСоставПортфеляСтрокой(ТекОписаниеПортфеля));
				
			ИначеЕсли ЭтоМетапортфель И (АктивныйПортфель <> ТекОписаниеПортфеля.АктивныйПортфель) Тогда
				
					// у метапортфеля поменялся активный портфель
					РазмерПортфеля = ПолучитьРазмерПортфеля(ТекОписаниеПортфеля, ТекущиеКотировки);
					Если РазмерПортфеля = Неопределено Тогда
						ДобавитьОшибкуВПротокол("Не удалось получить размер " + ПредставлениеПортфеля + " на дату " + СтрТекПериод + ": " + ТекОписаниеПортфеля.ТекстПоследнейОшибки);
						Продолжить;
					КонецЕсли; 
					ЗаполнитьСоставПортфеля(ТекОписаниеПортфеля, АктивныйПортфель);
					Успех = СформироватьПортфель(ТекОписаниеПортфеля, ТекущиеКотировки, РазмерПортфеля);
					Если НЕ Успех Тогда
						ДобавитьОшибкуВПротокол("Не удалось сформировать " + ПредставлениеПортфеля + " на дату " + СтрТекПериод + ": " + ТекОписаниеПортфеля.ТекстПоследнейОшибки);
						Продолжить;
					КонецЕсли;
					
					ТекОписаниеПортфеля.АктивныйПортфель = АктивныйПортфель;
					ТекОписаниеПортфеля.ДатаПредыдущейРебалансировки = ТекПериод;
					
					ДобавитьВПротокол("[" + СтрТекПериод + "] " + "Переформирован " + ПредставлениеПортфеля + ": " + ПолучитьСоставПортфеляСтрокой(ТекОписаниеПортфеля));
					
			Иначе 

				Если ЗначениеЗаполнено(ТекОписаниеПортфеля.СпособРебалансировки) Тогда
					ДатаСледующейРебалансировки = ПолучитьДатуСледующейРебалансировки(ТекОписаниеПортфеля);
				
					Если ДатаСледующейРебалансировки <= ТекПериод Тогда
						РазмерПортфеля = ПолучитьРазмерПортфеля(ТекОписаниеПортфеля, ТекущиеКотировки);
						Если РазмерПортфеля = Неопределено Тогда
							ДобавитьОшибкуВПротокол("Не удалось получить размер " + ПредставлениеПортфеля + " на дату " + СтрТекПериод + ": " + ТекОписаниеПортфеля.ТекстПоследнейОшибки);
							Продолжить;
						КонецЕсли; 
						
						Успех = СформироватьПортфель(ТекОписаниеПортфеля, ТекущиеКотировки, РазмерПортфеля);
						Если НЕ Успех Тогда
							ДобавитьОшибкуВПротокол("Не удалось сформировать " + ПредставлениеПортфеля + " на дату " + СтрТекПериод + ": " + ТекОписаниеПортфеля.ТекстПоследнейОшибки);
							Продолжить;
						КонецЕсли;
						
						ТекОписаниеПортфеля.ДатаПредыдущейРебалансировки = ТекПериод;
						
						ДобавитьВПротокол("[" + СтрТекПериод + "] " + "Перебалансирован " + ПредставлениеПортфеля + ": " + ПолучитьСоставПортфеляСтрокой(ТекОписаниеПортфеля));
						
					КонецЕсли; 
					
				КонецЕсли; 
					
			КонецЕсли; 
			
			РазмерПортфеля = ПолучитьРазмерПортфеля(ТекОписаниеПортфеля, ТекущиеКотировки);
			Если РазмерПортфеля = Неопределено Тогда
				ДобавитьОшибкуВПротокол("Не удалось получить размер " + ПредставлениеПортфеля + " на дату " + СтрТекПериод + ": " + ТекОписаниеПортфеля.ТекстПоследнейОшибки);
				Продолжить;
			КонецЕсли; 
			
			НоваяСтрока = Данные.Добавить();
			НоваяСтрока.Период = ТекПериод;
			НоваяСтрока.Портфель = ТекОписаниеПортфеля.Портфель;
			НоваяСтрока.Значение = РазмерПортфеля;
			
		КонецЦикла; 
		
		Для Каждого КлючИЗначение Из ТекущиеКотировки Цикл
			ПредыдущиеКотировки.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение);
		КонецЦикла; 
		
	КонецЦикла; 
	
	//Данные.Сортировать("Портфель, Период");
	
КонецПроцедуры

&НаСервере
Процедура РассчитатьСтатистику()
	
	Статистика.Очистить();
	
	ДанныеЭталона = Неопределено;
	ПортфельЭталон = Неопределено;
	НайденныеСтроки = Портфели.НайтиСтроки(Новый Структура("ИспользоватьКакЭталон", Истина));
	Если НайденныеСтроки.Количество() > 0 Тогда
		СтрокаЭталона = НайденныеСтроки[0];
		ПортфельЭталон = СтрокаЭталона.Портфель;
		ДанныеЭталона = Данные.Выгрузить(Новый Структура("Портфель", СтрокаЭталона.Портфель));
		ДанныеЭталона.Сортировать("Период");
		ДанныеЭталона.Индексы.Добавить("Период");
	КонецЕсли; 
	
	Для Каждого СтрокаТаблицы Из Портфели Цикл
		
		ТекПортфель = СтрокаТаблицы.Портфель;
		
		ДанныеПортфеля = Данные.Выгрузить(Новый Структура("Портфель", ТекПортфель));
		ДанныеПортфеля.Сортировать("Период");
		
		КолвоСтрокДанныхПортфеля = ДанныеПортфеля.Количество();
		Если КолвоСтрокДанныхПортфеля = 0 Тогда
			Продолжить;
		КонецЕсли; 
		
		ИндексПоследнейСтроки = КолвоСтрокДанныхПортфеля - 1;
		
		ДатаНач  = ДанныеПортфеля[0].Период;
		ДатаКон  = ДанныеПортфеля[ИндексПоследнейСтроки].Период;
		РазницаВДнях = ОбщегоНазначенияКлиентСервер.РазницаВДнях(ДатаНач, ДатаКон);
		РазницаВГодах = РазницаВДнях / 365;
		
		НачальнаяКотировка = ДанныеПортфеля[0].Значение;
		КонечнаяКотировка = ДанныеПортфеля[ИндексПоследнейСтроки].Значение;
		ДельтаКотировок = КонечнаяКотировка - НачальнаяКотировка;
		
		НоваяСтрока = Статистика.Добавить(); 
		НоваяСтрока.Портфель = ТекПортфель;
		НоваяСтрока.Показатель = "Доходность, %";
		НоваяСтрока.Значение = 100 * ?(НачальнаяКотировка <> 0, ДельтаКотировок / НачальнаяКотировка, 0);
		
		НоваяСтрока = Статистика.Добавить(); 
		НоваяСтрока.Портфель = ТекПортфель;
		НоваяСтрока.Показатель = "Годовая доходность (простые проценты), %";
		// Xкон = Xнач + (Xнач * r * n), откуда r = (Xкон - Xнач) / (Xнач * n)
		НоваяСтрока.Значение = 100 * ?(НачальнаяКотировка * РазницаВГодах <> 0, ДельтаКотировок / (НачальнаяКотировка * РазницаВГодах), 0);
		
		НоваяСтрока = Статистика.Добавить(); 
		НоваяСтрока.Портфель = ТекПортфель;
		НоваяСтрока.Показатель = "Годовая доходность (сложные проценты), %";
		// Xкон = Xнач * (1 + r)^n, откуда r = КОРЕНЬ n-ой степени[Хкон / Xнач] - 1
		НоваяСтрока.Значение = 100 * ?(НачальнаяКотировка <> 0 И РазницаВГодах <> 0, Pow(КонечнаяКотировка / НачальнаяКотировка, 1 / РазницаВГодах) - 1, 0);
		
		// Сравнение с портфелем-эталоном
		Если ДанныеЭталона <> Неопределено 
			И ТекПортфель <> ПортфельЭталон Тогда
			
			СопоставленныеДанные = Новый ТаблицаЗначений;
			СопоставленныеДанные.Колонки.Добавить("Период");
			СопоставленныеДанные.Колонки.Добавить("ЗначениеПортфель");
			СопоставленныеДанные.Колонки.Добавить("ЗначениеЭталон");
			Для Каждого СтрокаДанныхПортфеля Из ДанныеПортфеля Цикл
				ТекПериод = СтрокаДанныхПортфеля.Период;
				СтрокаДанныхЭталона = ДанныеЭталона.Найти(ТекПериод, "Период");
				Если СтрокаДанныхЭталона = Неопределено Тогда
					ДобавитьОшибкуВПротокол("При расчёте статистики для порфеля """ + ТекПортфель + """ не удалось получить данные по портфелю-эталону """ + СтрокаЭталона + """ за " + Формат(ТекПериод, "ДЛФ=D"));
					Продолжить;
				КонецЕсли;
				НоваяСтрока = СопоставленныеДанные.Добавить();
				НоваяСтрока.Период = ТекПериод;
				НоваяСтрока.ЗначениеПортфель = СтрокаДанныхПортфеля.Значение;
				НоваяСтрока.ЗначениеЭталон = СтрокаДанныхЭталона.Значение;
			КонецЦикла;
			
			КолвоСтрокСопоставленныхДанных = СопоставленныеДанные.Количество();
			Если КолвоСтрокСопоставленныхДанных = 0 Тогда
				Продолжить;
			КонецЕсли; 
			
			СреднееАрифмитическоеЭталон = 0;
			СреднееАрифмитическоеПортфель = 0;
			Для Каждого СтрокаСопоставленныхДанных Из СопоставленныеДанные Цикл
				СреднееАрифмитическоеЭталон = СреднееАрифмитическоеЭталон + СтрокаСопоставленныхДанных.ЗначениеЭталон;
				СреднееАрифмитическоеПортфель = СреднееАрифмитическоеПортфель + СтрокаСопоставленныхДанных.ЗначениеПортфель;
			КонецЦикла; 
			СреднееАрифмитическоеЭталон = СреднееАрифмитическоеЭталон / КолвоСтрокСопоставленныхДанных;
			СреднееАрифмитическоеПортфель = СреднееАрифмитическоеПортфель / КолвоСтрокСопоставленныхДанных;
			
			//НоваяСтрока = Статистика.Добавить(); 
			//НоваяСтрока.Портфель = ТекПортфель;
			//НоваяСтрока.Показатель = "Ковариация";
			//// формула: 1/n * СУММА[(X - Xср)*(Y - Yср)]
			//Ковариация = 0;
			//Для Каждого СтрокаСопоставленныхДанных Из СопоставленныеДанные Цикл
			//	Ковариация = Ковариация + 
			//		(СтрокаСопоставленныхДанных.ЗначениеЭталон - СреднееАрифмитическоеЭталон) *
			//		(СтрокаСопоставленныхДанных.ЗначениеПортфель - СреднееАрифмитическоеПортфель);
			//КонецЦикла;
			//Ковариация = Ковариация / КолвоСтрокСопоставленныхДанных;
			//НоваяСтрока.Значение = Ковариация;
			
			НоваяСтрока = Статистика.Добавить(); 
			НоваяСтрока.Портфель = ТекПортфель;
			НоваяСтрока.Показатель = "Корреляция";
			// формула: СУММА[(X - Xср)*(Y - Yср)] / КВКОРЕНЬ{СУММА[(X - Xср)^2] * СУММА[(Y - Yср)^2]}
			Корреляция = 0;
			Числитель = 0;
			СуммаКвадратовПоИксам = 0;
			СуммаКвадратовПоИгрекам = 0;
			Для Каждого СтрокаСопоставленныхДанных Из СопоставленныеДанные Цикл
				Числитель = Числитель +
					(СтрокаСопоставленныхДанных.ЗначениеЭталон - СреднееАрифмитическоеЭталон) *
					(СтрокаСопоставленныхДанных.ЗначениеПортфель - СреднееАрифмитическоеПортфель);
				СуммаКвадратовПоИксам = СуммаКвадратовПоИксам + Pow(СтрокаСопоставленныхДанных.ЗначениеЭталон - СреднееАрифмитическоеЭталон, 2);
				СуммаКвадратовПоИгрекам = СуммаКвадратовПоИгрекам + Pow(СтрокаСопоставленныхДанных.ЗначениеПортфель - СреднееАрифмитическоеПортфель, 2);
			КонецЦикла;
			Знаменатель = Sqrt(СуммаКвадратовПоИксам * СуммаКвадратовПоИгрекам);
			Корреляция = ?(Знаменатель <> 0, Числитель / Знаменатель, 0);
			НоваяСтрока.Значение = Корреляция;
			
		КонецЕсли; 
		
	КонецЦикла; 
	
КонецПроцедуры

&НаСервере
Процедура ПостроитьГрафик()
	
	График.Очистить();
	
	График.Обновление = Ложь;
	График.АвтоТранспонирование = Ложь;
	
	График.ТипДиаграммы = ТипДиаграммы.График;
	
	ВремТЗ = Данные.Выгрузить(, "Портфель");
	ВремТЗ.Свернуть("Портфель");
	СписокПортфелей = ВремТЗ.ВыгрузитьКолонку("Портфель");
		
	Для Каждого ТекПортфель Из СписокПортфелей Цикл
		Серия = График.УстановитьСерию(ТекПортфель);
		Для Каждого СтрокаДанных Из Данные.НайтиСтроки(Новый Структура("Портфель", ТекПортфель))  Цикл
			Точка = График.УстановитьТочку(СтрокаДанных.Период);
			Точка.Текст = Формат(СтрокаДанных.Период, "ДЛФ=D");
			График.УстановитьЗначение(Точка, Серия, СтрокаДанных.Значение);
		КонецЦикла; 
	КонецЦикла; 
	
	График.Обновление = Истина;
	График.АвтоТранспонирование = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ПротестироватьНаСервере()
	
	ОчистититьТаблицы();
	
	ЗаполнитьДанные();
	
	Если Данные.Количество() = 0 Тогда
		ДобавитьОшибкуВПротокол("Не удалось получить данные за выбранный период!");
		Возврат;
	КонецЕсли; 
	
	РассчитатьСтатистику();
	
	ПостроитьГрафик();
	
КонецПроцедуры

&НаКлиенте
Процедура ПортфелиИспользоватьКакЭталонПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Портфели.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		// снимем флажок у всех остальных строк
		Для Каждого СтрокаТаблицы Из Портфели.НайтиСтроки(Новый Структура("ИспользоватьКакЭталон", Истина))Цикл
			Если СтрокаТаблицы.Портфель <> ТекущиеДанные.Портфель Тогда
				СтрокаТаблицы.ИспользоватьКакЭталон = Ложь;
			КонецЕсли; 
		КонецЦикла; 
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСпособРебалансировкиНаСервере(ПортфельСсылка)
	
	Возврат ПортфельСсылка.СпособРебалансировки;
	
КонецФункции

&НаКлиенте
Процедура ПортфелиПортфельПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Портфели.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ТекущиеДанные.СпособРебалансировки = ПолучитьСпособРебалансировкиНаСервере(ТекущиеДанные.Портфель);
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СуммаИнвестиций = 100;
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьПротокол(Команда)
	
	Если Протокол.Количество() > 0 Тогда
		ДополнительныеПараметры = Новый Структура; 
		ОписаниеОповещения = Новый ОписаниеОповещения("ВопросОчиститьПротоколЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьВопрос(ОписаниеОповещения, "Очистить протокол?", РежимДиалогаВопрос.ДаНетОтмена);
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросОчиститьПротоколЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт 
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Протокол.Очистить();
	КонецЕсли; 
	
КонецПроцедуры