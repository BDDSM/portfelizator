
&НаКлиенте
Процедура Протестировать(Команда)
	
	Если НЕ ЗначениеЗаполнено(Портфель) Тогда
		ПоказатьПредупреждение(, "Не указан портфель!");
		Возврат;
	КонецЕсли; 
	
	ПротестироватьНаСервере();
	
	Если Протокол.Количество() > 0 Тогда
		Элементы.СтраницаПротокол.Видимость = Истина;
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаПротокол;
	Иначе 
		Элементы.СтраницаПротокол.Видимость = Ложь;
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура ОчистититьТаблицы()
	
	Протокол.Очистить();
	Статистика.Очистить();
	Данные.Очистить();
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьВПротокол(ТекстСообщения, Статус = "Инфо")
	
	НоваяСтрока = Протокол.Добавить(); 
	НоваяСтрока.Статус = Статус;
	НоваяСтрока.ТекстСообщения = ТекстСообщения;
	
КонецПроцедуры

Процедура ДобавитьОшибкуВПротокол(ТекстСообщения)
	
	ДобавитьВПротокол(ТекстСообщения, "Ошибка");
	
КонецПроцедуры

&НаСервере
Процедура СформироватьПортфель(СоставПортфеля, Котировки, Знач РазмерПортфеля = 100)
	
	//РазмерПортфеля = 100; // общая сумма инвестиций в этот портфель; нужно подумать можно ли без неё обойтись
	
	Если 1=2 Тогда
		СоставПортфеля = Новый ТаблицаЗначений; 
	КонецЕсли; 
	
	СуммаДолей = СоставПортфеля.Итог("Доля");

	Для Каждого СтрокаСостава Из СоставПортфеля Цикл
		ТекТикер = СтрокаСостава.Тикер;
		ТекДоля = СтрокаСостава.Доля;
		ТекКотировка = Котировки.Получить(ТекТикер);
		СтрокаСостава.Количество = (РазмерПортфеля * ТекДоля / СуммаДолей) / ТекКотировка;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьРазмерПортфеля(СоставПортфеля, Котировки)
	
	Результат = 0;
	Для Каждого СтрокаСостава Из СоставПортфеля Цикл
		ТекТикер = СтрокаСостава.Тикер;
		ТекКоличество = СтрокаСостава.Количество;
		ТекКотировка = Котировки.Получить(ТекТикер);
		Результат = Результат + ТекКотировка * ТекКоличество;
	КонецЦикла; 
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьДанные()
	
	Данные.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Портфели.ТикерЭталон КАК Тикер
	|ПОМЕСТИТЬ ВТ_Тикеры
	|ИЗ
	|	Справочник.Портфели КАК Портфели
	|ГДЕ
	|	Портфели.Ссылка = &Портфель
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПортфелиПортфель.Тикер
	|ИЗ
	|	Справочник.Портфели.СоставПортфеля КАК ПортфелиПортфель
	|ГДЕ
	|	ПортфелиПортфель.Ссылка = &Портфель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Котировки.Период КАК Период,
	|	Котировки.Тикер КАК Тикер,
	|	Котировки.Котировка КАК Котировка
	|ПОМЕСТИТЬ ВТ_Котировки
	|ИЗ
	|	РегистрСведений.Котировки КАК Котировки
	|ГДЕ
	|	Котировки.Период МЕЖДУ &Дата1 И &Дата2
	|	И Котировки.Тикер В
	|			(ВЫБРАТЬ
	|				ВТ_Тикеры.Тикер
	|			ИЗ
	|				ВТ_Тикеры КАК ВТ_Тикеры)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_Котировки.Период КАК Период
	|ИЗ
	|	ВТ_Котировки КАК ВТ_Котировки
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Тикеры.Тикер КАК Тикер
	|ИЗ
	|	ВТ_Тикеры КАК ВТ_Тикеры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Котировки.Период КАК Период,
	|	ВТ_Котировки.Тикер КАК Тикер,
	|	ВТ_Котировки.Котировка КАК Котировка
	|ИЗ
	|	ВТ_Котировки КАК ВТ_Котировки";
	Запрос.УстановитьПараметр("Дата1", Период.ДатаНачала);
	Запрос.УстановитьПараметр("Дата2", Период.ДатаОкончания);
	Запрос.УстановитьПараметр("Портфель", Портфель);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	КолвоРезультатов = МассивРезультатов.Количество();
	МассивПериодов = МассивРезультатов[КолвоРезультатов - 3].Выгрузить().ВыгрузитьКолонку("Период");
	МассивТикеров = МассивРезультатов[КолвоРезультатов - 2].Выгрузить().ВыгрузитьКолонку("Тикер");
	ТаблицаКотировок = МассивРезультатов[КолвоРезультатов - 1].Выгрузить();
	ТаблицаКотировок.Индексы.Добавить("Период, Тикер");
	
	ТикерЭталон = Портфель.ТикерЭталон;
	
	СоставПортфеля = Портфель.СоставПортфеля.Выгрузить();
	СоставПортфеля.Колонки.Добавить("Количество");
	ПортфельСформирован = Ложь;
	
	ДатаПредыдущейРебалансировки = Неопределено;
	
	ПредыдущиеКотировки = Новый Соответствие;
	ТекущиеКотировки = Новый Соответствие; 
	
	Для Каждого ТекПериод Из МассивПериодов Цикл
		
		ЕстьНезаполненныеКотировки = Ложь;
		ТекущиеКотировки = Новый Соответствие;
		Для Каждого ТекТикер Из МассивТикеров Цикл
			
			ТекКотировка = Неопределено;
			НайденныеСтроки = ТаблицаКотировок.НайтиСтроки(Новый Структура("Период, Тикер", ТекПериод, ТекТикер));
			Если НайденныеСтроки.Количество() = 1 Тогда
				Если ЗначениеЗаполнено(НайденныеСтроки[0].Котировка) Тогда
					ТекКотировка = НайденныеСтроки[0].Котировка;
				КонецЕсли; 
			ИначеЕсли НайденныеСтроки.Количество() > 1 Тогда
				ЕстьНезаполненныеКотировки = Истина;
				ДобавитьОшибкуВПротокол("Внутренняя ошибка! Для тикера = " + ТекТикер + " за дату " + ТекПериод + " найдено более одной котировки! Количество найденных котировок = " + НайденныеСтроки.Количество());
				Продолжить;
			КонецЕсли;
			Если ТекКотировка = Неопределено Тогда
				Если ФлагИспользоватьПредыдущуюКотировкуЕслиНетТекущей Тогда
					ПредКотировка = ПредыдущиеКотировки.Получить(ТекТикер);
					Если ПредКотировка <> Неопределено Тогда
						ТекКотировка = ПредКотировка;
					КонецЕсли; 
				КонецЕсли; 
			КонецЕсли;
			Если ТекКотировка <> Неопределено Тогда
				ТекущиеКотировки.Вставить(ТекТикер, ТекКотировка);
				ПредыдущиеКотировки.Вставить(ТекТикер, ТекКотировка);
			Иначе
				ЕстьНезаполненныеКотировки = Истина;
				ДобавитьОшибкуВПротокол("Не найдена котировка для тикера = " + ТекТикер + " за дату " + ТекПериод);
			КонецЕсли; 
			
		КонецЦикла;
		
		Если ЕстьНезаполненныеКотировки Тогда
			ДобавитьОшибкуВПротокол("Период " + ТекПериод + " пропущен из-за отсутствия данных о котировках");
			Продолжить;
		КонецЕсли; 
		
		КотировкаЭталона = ТекущиеКотировки.Получить(ТикерЭталон);
		
		НоваяСтрока = Данные.Добавить();
		НоваяСтрока.Период = ТекПериод;
		НоваяСтрока.Эталон = КотировкаЭталона;
		
		Если НЕ ПортфельСформирован Тогда
			СформироватьПортфель(СоставПортфеля, ТекущиеКотировки, КотировкаЭталона);
			ТекстСообщения = "";
			Для Каждого СтрокаСостава Из СоставПортфеля Цикл
				ТекстСообщения = ТекстСообщения + ", " + СтрокаСостава.Тикер + " = " + СтрокаСостава.Количество + " шт.";
			КонецЦикла;
			ДобавитьВПротокол("Сформирован портфель [" + Формат(ТекПериод, "ДЛФ=D") + "]: " + Сред(ТекстСообщения, 3));
			ПортфельСформирован = Истина;
			ДатаПредыдущейРебалансировки = ТекПериод;
		ИначеЕсли ПериодичностьРебалансировкиВДнях <> 0
			И ОбщегоНазначенияКлиентСервер.РазницаВДнях(ДатаПредыдущейРебалансировки, ТекПериод) >= ПериодичностьРебалансировкиВДнях Тогда
			РазмерПортфеля = ПолучитьРазмерПортфеля(СоставПортфеля, ТекущиеКотировки);
			СформироватьПортфель(СоставПортфеля, ТекущиеКотировки, РазмерПортфеля);
			ТекстСообщения = "";
			Для Каждого СтрокаСостава Из СоставПортфеля Цикл
				ТекстСообщения = ТекстСообщения + ", " + СтрокаСостава.Тикер + " = " + СтрокаСостава.Количество + " шт.";
			КонецЦикла;
			ДобавитьВПротокол("Произведена ребалансировка портфеля [" + Формат(ТекПериод, "ДЛФ=D") + "]: " + Сред(ТекстСообщения, 3));
			ПортфельСформирован = Истина;
			ДатаПредыдущейРебалансировки = ТекПериод;
		КонецЕсли; 
		
		НоваяСтрока.Портфель = ПолучитьРазмерПортфеля(СоставПортфеля, ТекущиеКотировки);
		
	КонецЦикла; 
	
	//Данные.Сортировать("Период");
	
КонецПроцедуры

&НаСервере
Процедура РассчитатьСтатистику()
	
	Статистика.Очистить();
	
	КолвоСтрокДанных = Данные.Количество();
	Если КолвоСтрокДанных = 0 Тогда
		Возврат;
	КонецЕсли; 
	
	ВидыДанных = Новый Массив;
	ВидыДанных.Добавить("Эталон");
	ВидыДанных.Добавить("Портфель");
	
	ДатаНач  = Данные[0].Период;
	ДатаКон  = Данные[КолвоСтрокДанных - 1].Период;
	РазницаВДнях = ОбщегоНазначенияКлиентСервер.РазницаВДнях(ДатаНач, ДатаКон);
	РазницаВГодах = РазницаВДнях / 365;
	
	ДанныеДляРасчета = Новый Структура();
	Для Каждого ТекВидДанных Из ВидыДанных Цикл
		ТекДанные = Новый Структура;
		ТекДанные.Вставить("НачальнаяКотировка", Данные[0][ТекВидДанных]);
		ТекДанные.Вставить("КонечнаяКотировка", Данные[КолвоСтрокДанных - 1][ТекВидДанных]);
		ТекДанные.Вставить("ДельтаКотировок", ТекДанные.КонечнаяКотировка - ТекДанные.НачальнаяКотировка);
		СреднееАрифмитическоеКотировок = 0;
		Для Каждого СтрокаТабЧасти Из Данные Цикл
			СреднееАрифмитическоеКотировок = СреднееАрифмитическоеКотировок + СтрокаТабЧасти[ТекВидДанных];
		КонецЦикла; 
		СреднееАрифмитическоеКотировок = СреднееАрифмитическоеКотировок / КолвоСтрокДанных;
		ТекДанные.Вставить("СреднееАрифмитическоеКотировок", СреднееАрифмитическоеКотировок);
		ДанныеДляРасчета.Вставить(ТекВидДанных, ТекДанные);
	КонецЦикла; 
									
	НоваяСтрока = Статистика.Добавить(); 
	НоваяСтрока.Показатель = "Доходность, %";
	Для Каждого ТекВидДанных Из ВидыДанных Цикл
		НачальнаяКотировка = ДанныеДляРасчета[ТекВидДанных].НачальнаяКотировка;
		ДельтаКотировок = ДанныеДляРасчета[ТекВидДанных].ДельтаКотировок;
		НоваяСтрока[ТекВидДанных] = 100 * ?(НачальнаяКотировка <> 0, ДельтаКотировок / НачальнаяКотировка, 0);
	КонецЦикла; 
	
	НоваяСтрока = Статистика.Добавить(); 
	НоваяСтрока.Показатель = "Годовая доходность (простые проценты), %";
	Для Каждого ТекВидДанных Из ВидыДанных Цикл
		НачальнаяКотировка = ДанныеДляРасчета[ТекВидДанных].НачальнаяКотировка;
		ДельтаКотировок = ДанныеДляРасчета[ТекВидДанных].ДельтаКотировок;
		НоваяСтрока[ТекВидДанных] = 100 * ?(НачальнаяКотировка <> 0, ДельтаКотировок / НачальнаяКотировка * 365 / РазницаВДнях, 0);
	КонецЦикла; 
	
	НоваяСтрока = Статистика.Добавить(); 
	НоваяСтрока.Показатель = "Ковариация";
	// формула: 1/n * СУММА[(X - Xср)*(Y - Yср)]
	Ковариация = 0;
	Для Каждого СтрокаТабЧасти Из Данные Цикл
		Ковариация = Ковариация + 
			(СтрокаТабЧасти.Эталон - ДанныеДляРасчета.Эталон.СреднееАрифмитическоеКотировок) *
			(СтрокаТабЧасти.Портфель - ДанныеДляРасчета.Портфель.СреднееАрифмитическоеКотировок);
	КонецЦикла;
	Ковариация = Ковариация / КолвоСтрокДанных;
	НоваяСтрока.Эталон = Ковариация;
	НоваяСтрока.Портфель = Ковариация;
	
	НоваяСтрока = Статистика.Добавить(); 
	НоваяСтрока.Показатель = "Корреляция";
	// формула: СУММА[(X - Xср)*(Y - Yср)] / КВКОРЕНЬ{СУММА[(X - Xср)^2] * СУММА[(Y - Yср)^2]}
	Корреляция = 0;
	Числитель = 0;
	СуммаКвадратовПоИксам = 0;
	СуммаКвадратовПоИгрекам = 0;
	Для Каждого СтрокаТабЧасти Из Данные Цикл
		Числитель = Числитель +
			(СтрокаТабЧасти.Эталон - ДанныеДляРасчета.Эталон.СреднееАрифмитическоеКотировок) *
			(СтрокаТабЧасти.Портфель - ДанныеДляРасчета.Портфель.СреднееАрифмитическоеКотировок);
		СуммаКвадратовПоИксам = СуммаКвадратовПоИксам + Pow(СтрокаТабЧасти.Эталон - ДанныеДляРасчета.Эталон.СреднееАрифмитическоеКотировок, 2);
		СуммаКвадратовПоИгрекам = СуммаКвадратовПоИгрекам + Pow(СтрокаТабЧасти.Портфель - ДанныеДляРасчета.Портфель.СреднееАрифмитическоеКотировок, 2);
	КонецЦикла;
	Знаменатель = Sqrt(СуммаКвадратовПоИксам * СуммаКвадратовПоИгрекам);
	Корреляция = ?(Знаменатель <> 0, Числитель / Знаменатель, 0);
	НоваяСтрока.Эталон = Корреляция;
	НоваяСтрока.Портфель = Корреляция;
	
КонецПроцедуры

&НаСервере
Процедура ПостроитьГрафик()
	
	График.Очистить();
	
	График.Обновление = Ложь;
	График.АвтоТранспонирование = Ложь;
	
	График.ТипДиаграммы = ТипДиаграммы.График;
	
	СерияЭталон = График.УстановитьСерию("Эталон");
	СерияПортфель = График.УстановитьСерию("Портфель");
	
	Для Каждого СтрокаДанных Из Данные Цикл
		Точка = График.УстановитьТочку(СтрокаДанных.Период);
		Точка.Текст = Формат(СтрокаДанных.Период, "ДЛФ=D");
		График.УстановитьЗначение(Точка, СерияЭталон, СтрокаДанных.Эталон);
		График.УстановитьЗначение(Точка, СерияПортфель, СтрокаДанных.Портфель);
	КонецЦикла; 
	
	График.Обновление = Истина;
	График.АвтоТранспонирование = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ПротестироватьНаСервере()
	
	ОчистититьТаблицы();
	
	ЗаполнитьДанные();
	
	Если Данные.Количество() = 0 Тогда
		ДобавитьОшибкуВПротокол("Не удалось получить данные за выбранный период!");
		Возврат;
	КонецЕсли; 
	
	РассчитатьСтатистику();
	
	ПостроитьГрафик();
	
КонецПроцедуры
