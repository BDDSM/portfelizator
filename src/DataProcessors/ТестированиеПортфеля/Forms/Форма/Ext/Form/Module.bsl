
&НаКлиенте
Процедура Протестировать(Команда)
	
	Если НЕ ЗначениеЗаполнено(СуммаИнвестиций) Тогда
		ПоказатьПредупреждение(, "Не задана Сумма инвестиций!");
		Возврат;
	КонецЕсли; 
	
	Если Портфели.Количество() = 0 Тогда
		ПоказатьПредупреждение(, "Не указаны портфели!");
		Возврат;
	КонецЕсли;

	ПротестироватьНаСервере();
	
	Если Протокол.Количество() > 0 Тогда
		Элементы.СтраницаПротокол.Видимость = Истина;
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаПротокол;
	Иначе 
		Элементы.СтраницаПротокол.Видимость = Ложь;
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура ОчистититьТаблицы()
	
	Протокол.Очистить();
	Статистика.Очистить();
	Данные.Очистить();
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьВПротокол(ТекстСообщения, Статус = "Инфо")
	
	НоваяСтрока = Протокол.Добавить(); 
	НоваяСтрока.Статус = Статус;
	НоваяСтрока.ТекстСообщения = ТекстСообщения;
	
КонецПроцедуры

Процедура ДобавитьОшибкуВПротокол(ТекстСообщения)
	
	ДобавитьВПротокол(ТекстСообщения, "Ошибка");
	
КонецПроцедуры

&НаСервере
Функция ПолучитьАктуальныйПортфельНаДату(ОписаниеПортфеля, ДатаСведений)
	
	ТекущийПортфель = Неопределено;
	Для Каждого СтрокаСоставаМетапортфеля Из ОписаниеПортфеля.СоставМетапортфеля Цикл
		// ищем среди портфелей метапортфеля ближайший к дате ДатаФормирования
		Если СтрокаСоставаМетапортфеля.Дата <= ДатаСведений Тогда
			ТекущийПортфель = СтрокаСоставаМетапортфеля.Портфель;
		Иначе 
			Прервать;
		КонецЕсли; 
	КонецЦикла; 
	
	Возврат ТекущийПортфель;
	
КонецФункции

&НаСервере
Процедура СформироватьПортфель(ОписаниеПортфеля, Котировки)
	
	СоставПортфеля = ОписаниеПортфеля.СоставПортфеля;
	
	РазмерПортфеля = ОписаниеПортфеля.РазмерПортфеля;
	Если НЕ ЗначениеЗаполнено(ОписаниеПортфеля.ТекущийПортфель) Тогда
		РазмерПортфеля = СуммаИнвестиций;
	КонецЕсли; 
	
	СуммаДолей = СоставПортфеля.Итог("Доля");

	Для Каждого СтрокаСостава Из СоставПортфеля Цикл
		ТекТикер = СтрокаСостава.Тикер;
		ТекДоля = СтрокаСостава.Доля;
		ТекКотировка = Котировки.Получить(ТекТикер);
		СтрокаСостава.Количество = (РазмерПортфеля * ТекДоля / СуммаДолей) / ТекКотировка;
	КонецЦикла;
	
	РассчитатьРазмерПортфеля(ОписаниеПортфеля, Котировки);
	
КонецПроцедуры

&НаСервере
Процедура РассчитатьРазмерПортфеля(ОписаниеПортфеля, Котировки)
	
	СоставПортфеля = ОписаниеПортфеля.СоставПортфеля;
	
	Результат = 0;
	Для Каждого СтрокаСостава Из СоставПортфеля Цикл
		ТекТикер = СтрокаСостава.Тикер;
		ТекКоличество = СтрокаСостава.Количество;
		ТекКотировка = Котировки.Получить(ТекТикер);
		Результат = Результат + ТекКотировка * ТекКоличество;
	КонецЦикла; 
	
	ОписаниеПортфеля.РазмерПортфеля = Результат;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьОписаниеПортфеля(ПортфельСсылка)
	
	ОписаниеПортфеля = Новый Структура;
	
	ОписаниеПортфеля.Вставить("РазмерПортфеля", 0);
	ОписаниеПортфеля.Вставить("ДатаПредыдущейРебалансировки", Дата(1, 1, 1));
	ОписаниеПортфеля.Вставить("ТекущийПортфель", Неопределено);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Портфели.Ссылка КАК Портфель,
	|	Портфели.Наименование КАК Наименование,
	|	Портфели.Метапортфель КАК Метапортфель,
	|	Портфели.СпособРебалансировки КАК СпособРебалансировки
	|ИЗ
	|	Справочник.Портфели КАК Портфели
	|ГДЕ
	|	Портфели.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", ПортфельСсылка);
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("ВНУТРЕННЯЯ ОШИБКА! Не удалось получить сведения о портфеле """ + ПортфельСсылка + """!");
		Возврат Неопределено;
	КонецЕсли; 
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	Для Каждого ТекКолонка Из РезультатЗапроса.Колонки Цикл
		ИмяКолонки = ТекКолонка.Имя;
		ОписаниеПортфеля.Вставить(ИмяКолонки, Выборка[ИмяКолонки]);
	КонецЦикла; 
	
	СоставПортфеля = Новый ТаблицаЗначений; 
	СоставПортфеля.Колонки.Добавить("Тикер");
	СоставПортфеля.Колонки.Добавить("Доля");
	СоставПортфеля.Колонки.Добавить("Количество");
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПортфелиСоставПортфеля.Тикер КАК Тикер,
	|	ПортфелиСоставПортфеля.Доля КАК Доля
	|ИЗ
	|	Справочник.Портфели.СоставПортфеля КАК ПортфелиСоставПортфеля
	|ГДЕ
	|	ПортфелиСоставПортфеля.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", ПортфельСсылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(СоставПортфеля.Добавить(), Выборка);
	КонецЦикла; 
	ОписаниеПортфеля.Вставить("СоставПортфеля", СоставПортфеля);
	
	СоставМетапортфеля = Неопределено;
	Если ОписаниеПортфеля.Метапортфель Тогда
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПортфелиСоставМетапортфеля.Дата КАК Дата,
		|	ПортфелиСоставМетапортфеля.Портфель КАК Портфель
		|ИЗ
		|	Справочник.Портфели.СоставМетапортфеля КАК ПортфелиСоставМетапортфеля
		|ГДЕ
		|	ПортфелиСоставМетапортфеля.Ссылка = &Ссылка";
		Запрос.УстановитьПараметр("Ссылка", ПортфельСсылка);
		РезультатЗапроса = Запрос.Выполнить();
		СоставМетапортфеля = РезультатЗапроса.Выгрузить();
		СоставМетапортфеля.Сортировать("Дата");
	КонецЕсли; 
	ОписаниеПортфеля.Вставить("СоставМетапортфеля", СоставМетапортфеля);
	
	Возврат ОписаниеПортфеля;
	
КонецФункции

&НаСервере
Функция ПолучитьСоставПортфеляСтрокой(ОписаниеПортфеля)
	
	Результат = "";
	
	Для Каждого СтрокаСостава Из ОписаниеПортфеля.СоставПортфеля Цикл
		Результат = Результат + ", " + СтрокаСостава.Тикер + " = " + СтрокаСостава.Количество + " шт.";
	КонецЦикла;
	
	Результат = Сред(Результат, 3);
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьДанные()
	
	Данные.Очистить();
	
	СписокПортфелей = Новый Массив;
	ОписанияПортфелей = Новый Массив; 
	
	Для Каждого СтрокаТаблицы Из Портфели Цикл
		ТекПортфель = СтрокаТаблицы.Портфель;
		СписокПортфелей.Добавить(ТекПортфель);
		ТекОписаниеПортфеля = ПолучитьОписаниеПортфеля(ТекПортфель);
		ТекОписаниеПортфеля.СпособРебалансировки = СтрокаТаблицы.СпособРебалансировки;
		ОписанияПортфелей.Добавить(ТекОписаниеПортфеля);
	КонецЦикла; 


	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СоставПортфеля.Тикер КАК Тикер
	|ПОМЕСТИТЬ ВТ_Тикеры
	|ИЗ
	|	Справочник.Портфели.СоставПортфеля КАК СоставПортфеля
	|ГДЕ
	|	НЕ СоставПортфеля.Ссылка.Метапортфель
	|	И СоставПортфеля.Ссылка В(&СписокПортфелей)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СоставПортфеля.Тикер
	|ИЗ
	|	Справочник.Портфели.СоставПортфеля КАК СоставПортфеля
	|ГДЕ
	|	СоставПортфеля.Ссылка В
	|			(ВЫБРАТЬ
	|				СоставМетапортфеля.Портфель
	|			ИЗ
	|				Справочник.Портфели.СоставМетапортфеля КАК СоставМетапортфеля
	|			ГДЕ
	|				СоставМетапортфеля.Ссылка.Метапортфель
	|				И СоставМетапортфеля.Ссылка В (&СписокПортфелей)
	|				И СоставМетапортфеля.Дата МЕЖДУ &Дата1 И &Дата2)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Котировки.Период КАК Период,
	|	Котировки.Тикер КАК Тикер,
	|	Котировки.Котировка КАК Котировка
	|ПОМЕСТИТЬ ВТ_Котировки
	|ИЗ
	|	РегистрСведений.Котировки КАК Котировки
	|ГДЕ
	|	Котировки.Период МЕЖДУ &Дата1 И &Дата2
	|	И Котировки.Тикер В
	|			(ВЫБРАТЬ
	|				ВТ_Тикеры.Тикер
	|			ИЗ
	|				ВТ_Тикеры КАК ВТ_Тикеры)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_Котировки.Период КАК Период
	|ИЗ
	|	ВТ_Котировки КАК ВТ_Котировки
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Котировки.Период КАК Период,
	|	ВТ_Котировки.Тикер КАК Тикер,
	|	ВТ_Котировки.Котировка КАК Котировка
	|ИЗ
	|	ВТ_Котировки КАК ВТ_Котировки";
	Запрос.УстановитьПараметр("Дата1", Период.ДатаНачала);
	Запрос.УстановитьПараметр("Дата2", Период.ДатаОкончания);
	Запрос.УстановитьПараметр("СписокПортфелей", СписокПортфелей);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	КолвоРезультатов = МассивРезультатов.Количество();
	МассивПериодов = МассивРезультатов[КолвоРезультатов - 2].Выгрузить().ВыгрузитьКолонку("Период");
	ТаблицаКотировок = МассивРезультатов[КолвоРезультатов - 1].Выгрузить();
	ТаблицаКотировок.Индексы.Добавить("Период, Тикер");
	
	ТекущиеКотировки = Новый Соответствие; 
	ПредыдущиеКотировки = Новый Соответствие;

	Для Каждого ТекПериод Из МассивПериодов Цикл
		
		СтрТекПериод = Формат(ТекПериод, "ДЛФ=D");
		
		ТекущиеКотировки = Новый Соответствие; 
		Для Каждого НайденнаяСтрока Из ТаблицаКотировок.НайтиСтроки(Новый Структура("Период", ТекПериод)) Цикл
			ТекущиеКотировки.Вставить(НайденнаяСтрока.Тикер, НайденнаяСтрока.Котировка);
		КонецЦикла;
		
		Если ФлагИспользоватьПредыдущуюКотировкуЕслиНетТекущей Тогда
			Для Каждого КлючИЗначение Из ПредыдущиеКотировки Цикл
				ТекТикер = КлючИЗначение.Ключ;
				ТекКотировка = КлючИЗначение.Значение;
				Если ТекущиеКотировки.Получить(ТекТикер) = Неопределено Тогда
					ТекущиеКотировки.Вставить(ТекТикер, ТекКотировка);
				КонецЕсли; 
			КонецЦикла; 
		КонецЕсли; 
		
		Для Каждого ТекОписаниеПортфеля Из ОписанияПортфелей Цикл
			
			НаименованиеПортфеля = ТекОписаниеПортфеля.Наименование;
			
			ТекущийПортфель = Неопределено;
			СоставПортфеля = ТекОписаниеПортфеля.СоставПортфеля;
			ЗаголовокИнфоСообщения = "Сформирован портфель """ + НаименованиеПортфеля + """ [" + СтрТекПериод + "]: ";
			
			Если НЕ ТекОписаниеПортфеля.Метапортфель Тогда
				// обычный портфель
				СоставПортфеля = ТекОписаниеПортфеля.СоставПортфеля;
				ТекущийПортфель = ТекОписаниеПортфеля.Портфель;
			Иначе 
				// метапортфель
				ТекущийПортфель = ПолучитьАктуальныйПортфельНаДату(ТекОписаниеПортфеля, ТекПериод);
				Если НЕ ЗначениеЗаполнено(ТекущийПортфель) Тогда
					ДобавитьОшибкуВПротокол("Для мета-портфеля """ + НаименованиеПортфеля + """ не удалось определить портфель, актуальный на дату " + СтрТекПериод + "! Проверьте Состав метапортфеля!");
					Продолжить;
				КонецЕсли;
				Если ТекущийПортфель <> ТекОписаниеПортфеля.ТекущийПортфель Тогда
					СоставПортфеля = ТекущийПортфель.СоставПортфеля;
					ТекОписаниеПортфеля.СоставПортфеля.Очистить();
					Для Каждого СтрокаСостава Из СоставПортфеля Цикл
						ЗаполнитьЗначенияСвойств(ТекОписаниеПортфеля.СоставПортфеля.Добавить(), СтрокаСостава);
					КонецЦикла;
					Если НЕ ЗначениеЗаполнено(ТекОписаниеПортфеля.ТекущийПортфель) Тогда
						ЗаголовокИнфоСообщения = "Сформирован мета-портфель """ + НаименованиеПортфеля + " по составу портфеля """ + ТекущийПортфель.Наименование + """ [" + СтрТекПериод + "]: ";
					Иначе
						ЗаголовокИнфоСообщения = "Переформирован мета-портфель """ + НаименованиеПортфеля + " по составу портфеля """ + ТекущийПортфель.Наименование + """ [" + СтрТекПериод + "]: ";
					КонецЕсли; 
				КонецЕсли; 
			КонецЕсли;
			
			// проверим есть ли у нас все необходимые котировки
			ЕстьНезаполненныеКотировки = Ложь;
			Для Каждого СтрокаСостава Из СоставПортфеля Цикл
				ТекТикер = СтрокаСостава.Тикер;
				ТекКотировка = ТекущиеКотировки.Получить(ТекТикер);
				Если НЕ ЗначениеЗаполнено(ТекКотировка) Тогда
					ЕстьНезаполненныеКотировки = Истина;
					ДобавитьОшибкуВПротокол("Не найдена котировка для тикера = " + ТекТикер + " за дату " + СтрТекПериод);
				КонецЕсли; 
			КонецЦикла;
			Если ЕстьНезаполненныеКотировки Тогда
				ДобавитьОшибкуВПротокол("Портфель """ + НаименованиеПортфеля + """, период " + СтрТекПериод + ": пропущен из-за отсутствия данных о котировках!");
				Продолжить;
			КонецЕсли; 
			
			Если ТекущийПортфель <> ТекОписаниеПортфеля.ТекущийПортфель Тогда
				СформироватьПортфель(ТекОписаниеПортфеля, ТекущиеКотировки);
				ТекОписаниеПортфеля.ТекущийПортфель = ТекущийПортфель;
				ДобавитьВПротокол(ЗаголовокИнфоСообщения + " " + ПолучитьСоставПортфеляСтрокой(ТекОписаниеПортфеля));
			КонецЕсли; 
			
			РассчитатьРазмерПортфеля(ТекОписаниеПортфеля, ТекущиеКотировки);
			
			НоваяСтрока = Данные.Добавить();
			НоваяСтрока.Период = ТекПериод;
			НоваяСтрока.Портфель = ТекОписаниеПортфеля.Портфель;
			НоваяСтрока.Значение = ТекОписаниеПортфеля.РазмерПортфеля;
			
		КонецЦикла; 
		
		Для Каждого КлючИЗначение Из ТекущиеКотировки Цикл
			ПредыдущиеКотировки.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение);
		КонецЦикла; 
		
	КонецЦикла; 
	
	//Данные.Сортировать("Период");
	
КонецПроцедуры

&НаСервере
Процедура РассчитатьСтатистику()
	
	//Статистика.Очистить();
	//
	//КолвоСтрокДанных = Данные.Количество();
	//Если КолвоСтрокДанных = 0 Тогда
	//	Возврат;
	//КонецЕсли; 
	//
	//ВидыДанных = Новый Массив;
	//ВидыДанных.Добавить("Эталон");
	//ВидыДанных.Добавить("Портфель");
	//
	//ДатаНач  = Данные[0].Период;
	//ДатаКон  = Данные[КолвоСтрокДанных - 1].Период;
	//РазницаВДнях = ОбщегоНазначенияКлиентСервер.РазницаВДнях(ДатаНач, ДатаКон);
	//РазницаВГодах = РазницаВДнях / 365;
	//
	//ДанныеДляРасчета = Новый Структура();
	//Для Каждого ТекВидДанных Из ВидыДанных Цикл
	//	ТекДанные = Новый Структура;
	//	ТекДанные.Вставить("НачальнаяКотировка", Данные[0][ТекВидДанных]);
	//	ТекДанные.Вставить("КонечнаяКотировка", Данные[КолвоСтрокДанных - 1][ТекВидДанных]);
	//	ТекДанные.Вставить("ДельтаКотировок", ТекДанные.КонечнаяКотировка - ТекДанные.НачальнаяКотировка);
	//	СреднееАрифмитическоеКотировок = 0;
	//	Для Каждого СтрокаТабЧасти Из Данные Цикл
	//		СреднееАрифмитическоеКотировок = СреднееАрифмитическоеКотировок + СтрокаТабЧасти[ТекВидДанных];
	//	КонецЦикла; 
	//	СреднееАрифмитическоеКотировок = СреднееАрифмитическоеКотировок / КолвоСтрокДанных;
	//	ТекДанные.Вставить("СреднееАрифмитическоеКотировок", СреднееАрифмитическоеКотировок);
	//	ДанныеДляРасчета.Вставить(ТекВидДанных, ТекДанные);
	//КонецЦикла; 
	//								
	//НоваяСтрока = Статистика.Добавить(); 
	//НоваяСтрока.Показатель = "Доходность, %";
	//Для Каждого ТекВидДанных Из ВидыДанных Цикл
	//	НачальнаяКотировка = ДанныеДляРасчета[ТекВидДанных].НачальнаяКотировка;
	//	ДельтаКотировок = ДанныеДляРасчета[ТекВидДанных].ДельтаКотировок;
	//	НоваяСтрока[ТекВидДанных] = 100 * ?(НачальнаяКотировка <> 0, ДельтаКотировок / НачальнаяКотировка, 0);
	//КонецЦикла; 
	//
	//НоваяСтрока = Статистика.Добавить(); 
	//НоваяСтрока.Показатель = "Годовая доходность (простые проценты), %";
	//// Xкон = Xнач + (Xнач * r * n), откуда r = (Xкон - Xнач) / (Xнач * n)
	//Для Каждого ТекВидДанных Из ВидыДанных Цикл
	//	НачальнаяКотировка = ДанныеДляРасчета[ТекВидДанных].НачальнаяКотировка;
	//	ДельтаКотировок = ДанныеДляРасчета[ТекВидДанных].ДельтаКотировок;
	//	НоваяСтрока[ТекВидДанных] = 100 * ?(НачальнаяКотировка * РазницаВГодах <> 0, ДельтаКотировок / (НачальнаяКотировка * РазницаВГодах), 0);
	//КонецЦикла; 
	//
	//НоваяСтрока = Статистика.Добавить(); 
	//НоваяСтрока.Показатель = "Годовая доходность (сложные проценты), %";
	//// Xкон = Xнач * (1 + r)^n, откуда r = КОРЕНЬ n-ой степени[Хкон / Xнач] - 1
	//Для Каждого ТекВидДанных Из ВидыДанных Цикл
	//	НачальнаяКотировка = ДанныеДляРасчета[ТекВидДанных].НачальнаяКотировка;
	//	КонечнаяКотировка = ДанныеДляРасчета[ТекВидДанных].КонечнаяКотировка;
	//	НоваяСтрока[ТекВидДанных] = 100 * ?(НачальнаяКотировка <> 0 И РазницаВГодах <> 0, Pow(КонечнаяКотировка / НачальнаяКотировка, 1 / РазницаВГодах) - 1, 0);
	//КонецЦикла; 
	//
	////НоваяСтрока = Статистика.Добавить(); 
	////НоваяСтрока.Показатель = "Ковариация";
	////// формула: 1/n * СУММА[(X - Xср)*(Y - Yср)]
	////Ковариация = 0;
	////Для Каждого СтрокаТабЧасти Из Данные Цикл
	////	Ковариация = Ковариация + 
	////		(СтрокаТабЧасти.Эталон - ДанныеДляРасчета.Эталон.СреднееАрифмитическоеКотировок) *
	////		(СтрокаТабЧасти.Портфель - ДанныеДляРасчета.Портфель.СреднееАрифмитическоеКотировок);
	////КонецЦикла;
	////Ковариация = Ковариация / КолвоСтрокДанных;
	////НоваяСтрока.Эталон = Ковариация;
	////НоваяСтрока.Портфель = Ковариация;
	//
	//НоваяСтрока = Статистика.Добавить(); 
	//НоваяСтрока.Показатель = "Корреляция";
	//// формула: СУММА[(X - Xср)*(Y - Yср)] / КВКОРЕНЬ{СУММА[(X - Xср)^2] * СУММА[(Y - Yср)^2]}
	//Корреляция = 0;
	//Числитель = 0;
	//СуммаКвадратовПоИксам = 0;
	//СуммаКвадратовПоИгрекам = 0;
	//Для Каждого СтрокаТабЧасти Из Данные Цикл
	//	Числитель = Числитель +
	//		(СтрокаТабЧасти.Эталон - ДанныеДляРасчета.Эталон.СреднееАрифмитическоеКотировок) *
	//		(СтрокаТабЧасти.Портфель - ДанныеДляРасчета.Портфель.СреднееАрифмитическоеКотировок);
	//	СуммаКвадратовПоИксам = СуммаКвадратовПоИксам + Pow(СтрокаТабЧасти.Эталон - ДанныеДляРасчета.Эталон.СреднееАрифмитическоеКотировок, 2);
	//	СуммаКвадратовПоИгрекам = СуммаКвадратовПоИгрекам + Pow(СтрокаТабЧасти.Портфель - ДанныеДляРасчета.Портфель.СреднееАрифмитическоеКотировок, 2);
	//КонецЦикла;
	//Знаменатель = Sqrt(СуммаКвадратовПоИксам * СуммаКвадратовПоИгрекам);
	//Корреляция = ?(Знаменатель <> 0, Числитель / Знаменатель, 0);
	//НоваяСтрока.Эталон = Корреляция;
	//НоваяСтрока.Портфель = Корреляция;
	
КонецПроцедуры

&НаСервере
Процедура ПостроитьГрафик()
	
	График.Очистить();
	
	График.Обновление = Ложь;
	График.АвтоТранспонирование = Ложь;
	
	График.ТипДиаграммы = ТипДиаграммы.График;
	
	ВремТЗ = Данные.Выгрузить(, "Портфель");
	ВремТЗ.Свернуть("Портфель");
	СписокПортфелей = ВремТЗ.ВыгрузитьКолонку("Портфель");
		
	Для Каждого ТекПортфель Из СписокПортфелей Цикл
		Серия = График.УстановитьСерию(ТекПортфель);
		Для Каждого СтрокаДанных Из Данные.НайтиСтроки(Новый Структура("Портфель", ТекПортфель))  Цикл
			Точка = График.УстановитьТочку(СтрокаДанных.Период);
			Точка.Текст = Формат(СтрокаДанных.Период, "ДЛФ=D");
			График.УстановитьЗначение(Точка, Серия, СтрокаДанных.Значение);
		КонецЦикла; 
	КонецЦикла; 
	
	График.Обновление = Истина;
	График.АвтоТранспонирование = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ПротестироватьНаСервере()
	
	ОчистититьТаблицы();
	
	ЗаполнитьДанные();
	
	Если Данные.Количество() = 0 Тогда
		ДобавитьОшибкуВПротокол("Не удалось получить данные за выбранный период!");
		Возврат;
	КонецЕсли; 
	
	РассчитатьСтатистику();
	
	ПостроитьГрафик();
	
КонецПроцедуры

&НаКлиенте
Процедура ПортфелиИспользоватьКакЭталонПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Портфели.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ТекПортфель = ТекущиеДанные.Портфель;
		// снимем флажок у всех остальных строк
		Для Каждого СтрокаТаблицы Из Портфели.НайтиСтроки(Новый Структура("ИспользоватьКакЭталон", Истина)) Цикл
			Если СтрокаТаблицы.Портфель <> ТекПортфель Тогда
				СтрокаТаблицы.ИспользоватьКакЭталон = Ложь;
			КонецЕсли; 
		КонецЦикла; 
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСпособРебалансировкиНаСервере(ПортфельСсылка)
	
	Возврат ПортфельСсылка.СпособРебалансировки;
	
КонецФункции

&НаКлиенте
Процедура ПортфелиПортфельПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Портфели.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ТекущиеДанные.СпособРебалансировки = ПолучитьСпособРебалансировкиНаСервере(ТекущиеДанные.Портфель);
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СуммаИнвестиций = 100;
	
КонецПроцедуры
