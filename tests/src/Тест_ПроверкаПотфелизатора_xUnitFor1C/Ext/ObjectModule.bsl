Перем КонтекстЯдра;
Перем Утверждения;

//{ основная процедура для юнит-тестирования xUnitFor1C
Процедура Инициализация(КонтекстЯдраПараметр) Экспорт
	КонтекстЯдра = КонтекстЯдраПараметр;
	Утверждения = КонтекстЯдра.Плагин("БазовыеУтверждения");
КонецПроцедуры

Процедура ЗаполнитьНаборТестов(НаборТестов, КонтекстЯдраПараметр) Экспорт
	КонтекстЯдра = КонтекстЯдраПараметр;
	НаборТестов.Добавить("ТестДолжен_ПроверитьРасчетДатРебалансировки");
КонецПроцедуры

//}

//{ Блок юнит-тестов

Процедура ПередЗапускомТеста() Экспорт
	НачатьТранзакцию();
КонецПроцедуры

Процедура ПослеЗапускаТеста() Экспорт
	Если ТранзакцияАктивна() Тогда
	    ОтменитьТранзакцию();
	КонецЕсли;
КонецПроцедуры

Процедура ТестДолжен_ПроверитьРасчетДатРебалансировки() Экспорт
	
	ТЗ = ПолучитьОписаниеТаблицыКонтроляДатыРебалансировки();
	
	// Ежедневно
	ДобавитьСтрокуКонтроляДатыРебалансировки_Ежедневно(ТЗ, Дата(2018, 12, 31), Дата(2019, 01, 01), 1); // переход через границу года
	ДобавитьСтрокуКонтроляДатыРебалансировки_Ежедневно(ТЗ, Дата(2016, 02, 28), Дата(2016, 02, 29), 1); // февраль високосного года
	ДобавитьСтрокуКонтроляДатыРебалансировки_Ежедневно(ТЗ, Дата(2017, 02, 28), Дата(2017, 03, 01), 1); // февраль невисокосного года
	ДобавитьСтрокуКонтроляДатыРебалансировки_Ежедневно(ТЗ, Дата(2018, 12, 31), Дата(2019, 04, 10), 100); // +100 дней
	ДобавитьСтрокуКонтроляДатыРебалансировки_Ежедневно(ТЗ, Дата(2018, 12, 31), Дата(2020, 05, 14), 500); // +500 дней
	
	// Ежемесячно (день месяца)
	ДобавитьСтрокуКонтроляДатыРебалансировки_Ежемесячно_ДеньМесяца(ТЗ, Дата(2018, 12, 31), Дата(2019, 01, 01), 1, 1); // переход через границу года
	ДобавитьСтрокуКонтроляДатыРебалансировки_Ежемесячно_ДеньМесяца(ТЗ, Дата(2016, 02, 29), Дата(2020, 02, 29), 48, 29); // февраль високосного года
	ДобавитьСтрокуКонтроляДатыРебалансировки_Ежемесячно_ДеньМесяца(ТЗ, Дата(2016, 02, 29), Дата(2017, 02, 28), 12, 29); // февраль невисокосного года
	ДобавитьСтрокуКонтроляДатыРебалансировки_Ежемесячно_ДеньМесяца(ТЗ, Дата(2019, 03, 25), Дата(2019, 04, 30), 1, 31); // нет такого числа в этом месяце
	ДобавитьСтрокуКонтроляДатыРебалансировки_Ежемесячно_ДеньМесяца(ТЗ, Дата(2018, 12, 31), Дата(2027, 04, 25), 100, 25); // +100 месяцев
	
	// Ежемесячно (день недели)
	ДобавитьСтрокуКонтроляДатыРебалансировки_Ежемесячно_ДеньНедели(ТЗ, Дата(2018, 12, 31), Дата(2019, 01, 07), 1, 1, 1); // переход через границу года / 1-ый понедельник
	ДобавитьСтрокуКонтроляДатыРебалансировки_Ежемесячно_ДеньНедели(ТЗ, Дата(2018, 12, 31), Дата(2019, 01, 01), 1, 2, 1); // переход через границу года / 1-ый вторник
	ДобавитьСтрокуКонтроляДатыРебалансировки_Ежемесячно_ДеньНедели(ТЗ, Дата(2018, 12, 31), Дата(2019, 01, 08), 1, 2, 2); // переход через границу года / 2-ой вторник
	ДобавитьСтрокуКонтроляДатыРебалансировки_Ежемесячно_ДеньНедели(ТЗ, Дата(2018, 12, 31), Дата(2019, 01, 31), 1, 4, 5); // переход через границу года / 5-ый четверг
	ДобавитьСтрокуКонтроляДатыРебалансировки_Ежемесячно_ДеньНедели(ТЗ, Дата(2018, 12, 31), Дата(2019, 01, 28), 1, 1, 9); // переход через границу года / последний понедельник
	ДобавитьСтрокуКонтроляДатыРебалансировки_Ежемесячно_ДеньНедели(ТЗ, Дата(2018, 12, 31), Дата(2019, 01, 29), 1, 2, 9); // переход через границу года / последний вторник
	ДобавитьСтрокуКонтроляДатыРебалансировки_Ежемесячно_ДеньНедели(ТЗ, Дата(2018, 12, 31), Дата(2019, 01, 27), 1, 7, 9); // переход через границу года / последнее воскресенье
	ДобавитьСтрокуКонтроляДатыРебалансировки_Ежемесячно_ДеньНедели(ТЗ, Дата(2016, 02, 29), Дата(2020, 02, 29), 48, 6, 9); // февраль високосного года
	ДобавитьСтрокуКонтроляДатыРебалансировки_Ежемесячно_ДеньНедели(ТЗ, Дата(2016, 02, 29), Дата(2017, 02, 28), 12, 2, 4); // февраль невисокосного года
	ДобавитьСтрокуКонтроляДатыРебалансировки_Ежемесячно_ДеньНедели(ТЗ, Дата(2018, 12, 31), Дата(2027, 04, 25), 100, 7, 4); // +100 месяцев
	ДобавитьСтрокуКонтроляДатыРебалансировки_Ежемесячно_ДеньНедели(ТЗ, Дата(2018, 12, 31), Дата(2027, 04, 25), 100, 7, 9); // +100 месяцев
	
	// Ежегодно (день месяца)
	ДобавитьСтрокуКонтроляДатыРебалансировки_Ежегодно_ДеньМесяца(ТЗ, Дата(2018, 12, 31), Дата(2019, 01, 01), 1, 1, 1); // переход через границу года
	ДобавитьСтрокуКонтроляДатыРебалансировки_Ежегодно_ДеньМесяца(ТЗ, Дата(2016, 02, 29), Дата(2020, 02, 29), 4, 29, 2); // февраль високосного года
	ДобавитьСтрокуКонтроляДатыРебалансировки_Ежегодно_ДеньМесяца(ТЗ, Дата(2016, 02, 29), Дата(2017, 02, 28), 1, 29, 2); // февраль невисокосного года
	ДобавитьСтрокуКонтроляДатыРебалансировки_Ежегодно_ДеньМесяца(ТЗ, Дата(2019, 03, 25), Дата(2020, 04, 30), 1, 31, 4); // нет такого числа в этом месяце
	ДобавитьСтрокуКонтроляДатыРебалансировки_Ежегодно_ДеньМесяца(ТЗ, Дата(2018, 12, 31), Дата(2118, 04, 25), 100, 25, 4); // +100 лет
	
	// Ежегодно (день недели)
	ДобавитьСтрокуКонтроляДатыРебалансировки_Ежегодно_ДеньНедели(ТЗ, Дата(2018, 12, 31), Дата(2019, 01, 07), 1, 1, 1, 1); // переход через границу года / 1-ый понедельник
	ДобавитьСтрокуКонтроляДатыРебалансировки_Ежегодно_ДеньНедели(ТЗ, Дата(2018, 12, 31), Дата(2019, 01, 01), 1, 2, 1, 1); // переход через границу года / 1-ый вторник
	ДобавитьСтрокуКонтроляДатыРебалансировки_Ежегодно_ДеньНедели(ТЗ, Дата(2018, 12, 31), Дата(2019, 01, 08), 1, 2, 2, 1); // переход через границу года / 2-ой вторник
	ДобавитьСтрокуКонтроляДатыРебалансировки_Ежегодно_ДеньНедели(ТЗ, Дата(2018, 12, 31), Дата(2019, 01, 31), 1, 4, 5, 1); // переход через границу года / 5-ый четверг
	ДобавитьСтрокуКонтроляДатыРебалансировки_Ежегодно_ДеньНедели(ТЗ, Дата(2018, 12, 31), Дата(2019, 01, 28), 1, 1, 9, 1); // переход через границу года / последний понедельник
	ДобавитьСтрокуКонтроляДатыРебалансировки_Ежегодно_ДеньНедели(ТЗ, Дата(2018, 12, 31), Дата(2019, 01, 29), 1, 2, 9, 1); // переход через границу года / последний вторник
	ДобавитьСтрокуКонтроляДатыРебалансировки_Ежегодно_ДеньНедели(ТЗ, Дата(2018, 12, 31), Дата(2019, 01, 27), 1, 7, 9, 1); // переход через границу года / последнее воскресенье
	ДобавитьСтрокуКонтроляДатыРебалансировки_Ежегодно_ДеньНедели(ТЗ, Дата(2016, 02, 29), Дата(2020, 02, 29), 4, 6, 9, 2); // февраль високосного года
	ДобавитьСтрокуКонтроляДатыРебалансировки_Ежегодно_ДеньНедели(ТЗ, Дата(2016, 02, 29), Дата(2017, 02, 28), 1, 2, 4, 2); // февраль невисокосного года
	ДобавитьСтрокуКонтроляДатыРебалансировки_Ежегодно_ДеньНедели(ТЗ, Дата(2018, 12, 31), Дата(2118, 04, 25), 100, 1, 4, 4); // +100 лет
	ДобавитьСтрокуКонтроляДатыРебалансировки_Ежегодно_ДеньНедели(ТЗ, Дата(2018, 12, 31), Дата(2118, 04, 25), 100, 1, 9, 4); // +100 лет
	
	
	Для Каждого СтрокаТЗ Из ТЗ Цикл
		ДатаПредыдущейРебалансировки = СтрокаТЗ.ДатаПредыдущейРебалансировки;
		ПравильноеЗначение = СтрокаТЗ.ПравильноеЗначение;
		ВычисленноеЗначение = ОбщегоНазначенияСервер.ПолучитьДатуСледующейРебалансировки(ДатаПредыдущейРебалансировки, СтрокаТЗ.ПараметрыРебалансировки);
		Утверждения.ПроверитьРавенство(ВычисленноеЗначение, ПравильноеЗначение, "ДатаПредыдущейРебалансировки => " + ДатаПредыдущейРебалансировки + "; ПараметрыРебалансировки => " + СтруктураСтрокой(СтрокаТЗ.ПараметрыРебалансировки));
	КонецЦикла; 
		

КонецПроцедуры

//}

//{ Вспомогательные процедуры и функции
Функция ПолучитьОписаниеТаблицыКонтроляДатыРебалансировки()
	
	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("ДатаПредыдущейРебалансировки");
	ТЗ.Колонки.Добавить("ПараметрыРебалансировки");
	ТЗ.Колонки.Добавить("ПравильноеЗначение");
	
	Возврат ТЗ;
	
КонецФункции

Процедура ДобавитьСтрокуКонтроляДатыРебалансировки(ТЗ, ДатаПредыдущейРебалансировки, ПравильноеЗначение, УстановленныеПараметрыРебалансировки)
	
	ПараметрыРебалансировки = Новый Структура("Периодичность, ЧислоПериодов, ВариантВыбораДняМесяца,
		|ДеньМесяца, ДеньНедели, НомерНедели, МесяцГода"); 
	
	ЗаполнитьЗначенияСвойств(ПараметрыРебалансировки, УстановленныеПараметрыРебалансировки);
	
	НоваяСтрока = ТЗ.Добавить(); 
	НоваяСтрока.ПараметрыРебалансировки = ПараметрыРебалансировки;
	НоваяСтрока.ДатаПредыдущейРебалансировки = ДатаПредыдущейРебалансировки;
	НоваяСтрока.ПравильноеЗначение = ПравильноеЗначение;
	
КонецПроцедуры

Процедура ДобавитьСтрокуКонтроляДатыРебалансировки_Ежедневно(ТЗ, ДатаПредыдущейРебалансировки, ПравильноеЗначение, ЧислоПериодов)
	
	ПараметрыРебалансировки = Новый Структура("Периодичность, ЧислоПериодов",
		Перечисления.ПериодичностьРебалансировки.Ежедневно, ЧислоПериодов);
		
	ДобавитьСтрокуКонтроляДатыРебалансировки(ТЗ, ДатаПредыдущейРебалансировки, ПравильноеЗначение, ПараметрыРебалансировки);
	
КонецПроцедуры


Процедура ДобавитьСтрокуКонтроляДатыРебалансировки_Ежемесячно_ДеньМесяца(ТЗ, ДатаПредыдущейРебалансировки, ПравильноеЗначение, ЧислоПериодов, ДеньМесяца)
	
	ПараметрыРебалансировки = Новый Структура("Периодичность, ЧислоПериодов, ВариантВыбораДняМесяца,
		|ДеньМесяца",
		Перечисления.ПериодичностьРебалансировки.Ежемесячно, ЧислоПериодов, Перечисления.ВариантыВыбораДняМесяца.ЧислоМесяца,
		ДеньМесяца
		);
		
	ДобавитьСтрокуКонтроляДатыРебалансировки(ТЗ, ДатаПредыдущейРебалансировки, ПравильноеЗначение, ПараметрыРебалансировки);
	
КонецПроцедуры

Процедура ДобавитьСтрокуКонтроляДатыРебалансировки_Ежемесячно_ДеньНедели(ТЗ, ДатаПредыдущейРебалансировки, ПравильноеЗначение, ЧислоПериодов, ДеньНедели, НомерНедели)
	
	ПараметрыРебалансировки = Новый Структура("Периодичность, ЧислоПериодов, ВариантВыбораДняМесяца,
		|ДеньНедели, НомерНедели",
		Перечисления.ПериодичностьРебалансировки.Ежемесячно, ЧислоПериодов, Перечисления.ВариантыВыбораДняМесяца.ДеньНедели,
		ДеньНедели, НомерНедели
		);
		
	ДобавитьСтрокуКонтроляДатыРебалансировки(ТЗ, ДатаПредыдущейРебалансировки, ПравильноеЗначение, ПараметрыРебалансировки);
	
КонецПроцедуры


Процедура ДобавитьСтрокуКонтроляДатыРебалансировки_Ежегодно_ДеньМесяца(ТЗ, ДатаПредыдущейРебалансировки, ПравильноеЗначение, ЧислоПериодов, ДеньМесяца, МесяцГода)
	
	ПараметрыРебалансировки = Новый Структура("Периодичность, ЧислоПериодов, ВариантВыбораДняМесяца,
		|ДеньМесяца, МесяцГода",
		Перечисления.ПериодичностьРебалансировки.Ежегодно, ЧислоПериодов, Перечисления.ВариантыВыбораДняМесяца.ЧислоМесяца,
		ДеньМесяца, МесяцГода
		);
		
	ДобавитьСтрокуКонтроляДатыРебалансировки(ТЗ, ДатаПредыдущейРебалансировки, ПравильноеЗначение, ПараметрыРебалансировки);
	
КонецПроцедуры

Процедура ДобавитьСтрокуКонтроляДатыРебалансировки_Ежегодно_ДеньНедели(ТЗ, ДатаПредыдущейРебалансировки, ПравильноеЗначение, ЧислоПериодов, ДеньНедели, НомерНедели, МесяцГода)
	
	ПараметрыРебалансировки = Новый Структура("Периодичность, ЧислоПериодов, ВариантВыбораДняМесяца,
		|ДеньНедели, НомерНедели, МесяцГода",
		Перечисления.ПериодичностьРебалансировки.Ежегодно, ЧислоПериодов, Перечисления.ВариантыВыбораДняМесяца.ДеньНедели,
		ДеньНедели, НомерНедели, МесяцГода
		);
		
	ДобавитьСтрокуКонтроляДатыРебалансировки(ТЗ, ДатаПредыдущейРебалансировки, ПравильноеЗначение, ПараметрыРебалансировки);
	
КонецПроцедуры

Функция СтруктураСтрокой(ПарамСтруктура)
	
	Стр = "{ ";
	Для Каждого КлючИЗначение Из ПарамСтруктура Цикл
		Стр = Стр + КлючИЗначение.Ключ + "=" + КлючИЗначение.Значение + "; ";
	КонецЦикла; 
	
	Стр = Стр + " }";
	
	Возврат Стр;
	
КонецФункции
//}